=head1 NAME

Test::Apache::RewriteRules - Testing Apache's Rewrite Rules

=head1 SYNOPSIS

  use Test::Apache::RewriteRules;
  use Path::Class;
  
  $Test::Apache::RewriteRules::HttpdPath = '/path/to/httpd';
  my $apache = Test::Apache::RewriteRules->new;
  $apache->add_backend(name => 'ReverseProxyedHost1');
  $apache->add_backend(name => 'ReverseProxyedHost2');
  $apache->rewrite_conf_f(file('apache.rewrite.conf'));
  
  $apache->start_apache;
  
  $apache->is_host_path(q</foo/a>, 'ReverseProxyedHost1', q</a>,
                        'Handled by reverse-proxyed host 1');
  $apache->is_host_path(q</bar/b>, 'ReverseProxyedHost2', q</b>,
                        'Handled by reverse-proxyed host 2');
  $apache->is_host_path(q</baz>, '', q</baz>,
                        'Handled by the proxy itself');
  $apache->is_redirect(q</hoge/z>, q<http://external.test/z>);
  
  $apache->stop_apache;

  # apache.rewrite.conf
  RewriteEngine on
  RewriteRule /foo/(.*)  http://%{ENV:ReverseProxyedHost1}/$1 [P,L]
  RewriteRule /bar/(.*)  http://%{ENV:ReverseProxyedHost2}/$1 [P,L]
  RewriteRule /hoge/(.*) http://external.test/$1 [R,L]

=head1 DESCRIPTION

The C<Test::Apache::RewriteRules> module sets up Apache HTTPD server
for the purpose of testing of a set of C<RewriteRule>s in
C<apache.conf> Apache configuration.

=head1 METHODS

=over 4

=item $apache = Test::Apache::RewriteRules->available;

Returns whether the features provided by this module is available or
not.  At the time of writing, it returns false is no Apache binary is
found.

=item $apache = Test::Apache::RewriteRules->new;

Returns a new instance of the class.

=item $apache->add_backend(name => HOST_NAME);

Registers a backend (i.e. a host that handles HTTP requests).  An
environment variable whose name is I<HOST_NAME> will be defined in the
automatically-generated Apache configuration file such that it can be
used in rewrite rules.

=item $apache->copy_conf_as_f(ORIG_FILE, [PATTERN1 => REPLACE1, PATTERN2 => REPLACE2, ...])

Copies the file represented by the C<Path::Class::File> object into
the temporary directory and optionally replaces its content by
applying patterns.  Patterns, if specified, must be an array reference
containing string or regular expression followed by string or code
reference.  If the replaced string is specified as a code reference,
its return value is used for the replacement.  If the pattern is
specified as a regular expression and the replaced string is specified
as a code reference, the code reference can use C<$1>, C<$2>, ... to
access to captured substrings.

=item $apache->rewrite_conf_f(PATH_CLASS_FILE)

Sets the C<Path::Class::File> object that represents the path to the
C<RewriteRule>s' part of the Apache configuration to test.

=item $apache->start_apache

Boots the Apache process.  It should be invoked before any
C<is_host_path> call.

=item $apache->is_host_path(REQUEST_PATH, EXPECTED_HOST_NAME, EXPECTED_PATH, [NAME]);

Checks whether the request for I<REQUEST_PATH> is handled by host
C<EXPECTED_HOST_NAME> with path C<EXPECTED_PATH>.  The host name
should be specified by the name registered using C<add_backend>
method, or the empty string if the request would be handled by the
reverse proxy (i.e. the rewriting host) itself.  This method acts as a
test function of L<Test::Builder> or L<Test::More>.  The argument
I<NAME>, if specified, represents the name of the test.

=item $apache->is_redirect(REQUEST_PATH, EXPECTED_REDIRECT_URL, [NAME], [code => CODE]);

Checks whether the request for I<REQUEST_PATH> is HTTP-redirected to
the I<EXPECTED_REDIRECT_URL>.  This method acts as a test function of
L<Test::Builder> or L<Test::More>.  The argument I<NAME>, if
specified, represents the name of the test.

Optionally, you can specify the expected HTTP status code.  The
default status code is C<302> (Found).

=item $apache->stop_apache

Shuts down the Apache process.

=back

You can set the expected client environment used to evaluate
C<is_host_path> and C<is_redirect> by using
L<Test::Apache::RewriteRules::ClientEnvs> module.

Where I<REQUEST_PATH> is expected, the host of the request (used in
the C<Host:> request header field) can be specified by prepending
C<//> followed by host (hostname possibly followed by C<:> and port
number) before the real path.

=head1 EXAMPLES

See C<t/test/apache-rewriterules*.t> and
C<t/test/apache-rewriterules*.conf>.

=head1 HISTORY

=over 4

=item 1.0

Initial released version.

=back

=head1 SEE ALSO

mod_rewrite <http://httpd.apache.org/docs/2.2/mod/mod_rewrite.html>.

L<Test::More>.

L<Test::Apache::RewriteRules::ClientEnvs>.

=head1 AUTHOR

Wakaba (id:wakabatan) <wakabatan@hatena.ne.jp>.

=head1 LICENSE

Copyright 2010 Hatena <http://www.hatena.ne.jp/>.

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut
